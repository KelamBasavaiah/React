{"version":3,"sources":["Components/Header.js","Components/ExContext.js","Components/Home.js","Components/Faq.js","Components/Gallery.js","Components/customHook.js","Table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","exact","activeStyle","color","initialState","count","reducer","state","action","type","Error","ExContext","React","memo","sign","useReducer","dispatch","useState","text","setText","memoizedValue","useMemo","onClick","EContext","createContext","Home","text1","setText1","addSignature","useCallback","inputRef","useRef","useEffect","current","focus","Provider","value","ref","onChange","event","target","placeholder","Faq","Gallery","useGetListCount","setCount","fetch","then","res","json","result","length","Table","list","setList","loading","setLoading","refresh","setrefresh","offset","setOffset","perPage","pageCount","setPageCount","slice","Math","ceil","console","log","tableRows","Fragment","map","data","index","id","title","body","recordCount","filename","style","textalign","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb7d7f7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nconst Header = () => {    \r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"logo\">\r\n                    <NavLink to=\"/\">Hi !</NavLink>\r\n                </div>\r\n                <div className=\"navbar\">\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink to=\"/\" exact activeStyle={{ color: '#2a6496' }}>Home</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/Table\" exact activeStyle={{ color: '#2a6496' }}>Table</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/Gallery\" exact activeStyle={{ color: '#2a6496' }}>Gallery</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/FAQ\" exact activeStyle={{ color: '#2a6496' }}>FAQ</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useContext, useReducer,useMemo } from 'react';\r\n\r\nconst initialState = { count: 0 };\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'increment':\r\n      return { count: state.count + 1 };\r\n    case 'decrement':\r\n      return { count: state.count - 1 };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst ExContext = React.memo(({sign}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [text, setText] = React.useState('intial');\r\n  //console.log('Render:Ex context');\r\n  const memoizedValue = useMemo(() => text+' lol', [state,text]);\r\n  return (\r\n    <>\r\n    <div >\r\n        <button onClick={()=>setText(sign)}>Call</button>\r\n        <p>Call bcak text {text} and use memo {memoizedValue}</p>\r\n      </div>\r\n      \r\n      Reducer Count: {state.count}\r\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\r\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n      \r\n    </>\r\n  );\r\n});\r\n\r\nexport default ExContext;\r\n","import React,{useRef,useEffect} from 'react';\r\nimport ExContext from './ExContext';\r\n\r\nconst EContext = React.createContext(3);\r\nfunction Home() {\r\n    const [text, setText] = React.useState('');\r\n    const [text1, setText1] = React.useState('');\r\n    //console.log('Render:Home ');\r\n    const handleText = (event) => {setText(event.target.value);};\r\n    const handleText1 = (event) => {setText1(event.target.value);};\r\n\r\n    const addSignature=React.useCallback(()=>{return text+' KB';},[text]);\r\n    const inputRef = useRef();\r\n    useEffect(() => {inputRef.current.focus();}, []);\r\n\r\n    return (\r\n        <EContext.Provider value={6}>\r\n            <p>Home Page</p>\r\n            <div >\r\n                <input type=\"text\" ref={inputRef} value={text} onChange={handleText} placeholder='memo ex' />\r\n                <input type=\"text\" value={text1} onChange={handleText1} placeholder='call back support' />\r\n            </div>\r\n            <ExContext sign={addSignature}/>\r\n            \r\n        </EContext.Provider>\r\n\r\n    );\r\n}\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction Faq(){\r\n    return(\r\n        <p>Faq Page</p>\r\n    );\r\n}\r\nexport default Faq;\r\n","import React, { useState } from 'react'\r\n\r\n\r\n\r\nconst Gallery=()=>{\r\n    const [GList,setGlist]=useState([])\r\n    return(<p>whb</p>)\r\n\r\n}\r\nexport default  Gallery;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction useGetListCount(){\r\n    const [count ,setCount]=useState(0);\r\n\r\n    useEffect(() => {        \r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    setCount(result.length)\r\n                }\r\n        )\r\n    }, []);\r\n   return count;\r\n}\r\nexport default useGetListCount;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useGetListCount from '../Components/customHook';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { CSVLink } from \"react-csv\";\r\nimport '../App.css';\r\n\r\nfunction Table() {\r\n    const [list, setList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [refresh, setrefresh] = useState(0); \r\n    \r\n    const [offset, setOffset] = useState(0);\r\n    const [perPage] = useState(5);\r\n    const [pageCount, setPageCount] = useState(0)\r\n    \r\n  \r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    setList(result);\r\n                    setLoading(true);                    \r\n                    setList(result.slice(offset, offset + perPage));\r\n                    setPageCount(Math.ceil(result.length / perPage)); \r\n                    console.log(list, loading,offset,pageCount);                     \r\n                }\r\n        )                                                     \r\n        //return()=>{alert('Use effect Clean up Function running')}\r\n    }, [refresh,offset]);\r\n\r\n    const handlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        setOffset(selectedPage *perPage)\r\n    };\r\n    let tableRows = null;\r\n\r\n    if (list) {\r\n        tableRows = <React.Fragment>\r\n            {list.map((data, index) => {\r\n                return (\r\n                    <tr key={data.id}>\r\n                        <td >\r\n                            {data.id}\r\n                        </td>\r\n                        <td >\r\n                            {data.title}\r\n                        </td>\r\n                        <td >\r\n                            {data.body}\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            })}\r\n        </React.Fragment>\r\n    }\r\n    const spinner={\r\n        color:'blue',\r\n        textalign:'center'\r\n    }\r\n    let recordCount=useGetListCount(list);\r\n    return (\r\n        <div>\r\n            <p>Records count {recordCount} . By custom hook.</p> <p>Refreshed {refresh}</p>\r\n            <button onClick={()=> setrefresh(refresh+1)}>refresh</button>\r\n            <button className='paginationPostion'><CSVLink data={list}  filename={\"my-file.csv\"}>Download me</CSVLink></button>\r\n            <table id=\"holidayTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Title </th>\r\n                        <th>body</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                {loading? tableRows:<tr style={spinner}><td>Data is loading ......</td></tr>}\r\n                </tbody>                                                                  \r\n            </table>\r\n            <div  className='paginationPostion'>\r\n                    <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n                    </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n\r\n","import './App.css';\nimport Header from './Components/Header';\nimport Home from './Components/Home'\nimport Faq from './Components/Faq';\nimport Gallery from './Components/Gallery';\nimport React,{useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Table from './Table/Table.js'\n\n\nfunction App() {\n  return (       \n      <Router>\n        <React.Fragment>\n          <Header />\n          <div className=\"wrapper\">\n            <Switch>\n              <Route path={\"/\"} exact component={Home} />\n              <Route path={\"/Table\"} exact component={Table} />\n              <Route path={\"/Gallery\"} exact component={Gallery} />\n              <Route path={\"/FAQ\"} exact component={Faq} />\n            </Switch>\n          </div>\n        </React.Fragment>\n      </Router>         \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}